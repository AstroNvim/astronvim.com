---
import { Icon } from "astro-icon/components";
---

<!--
  negative margin is sum of button width (8) and gap size of flex parent (6)
  TODO don't hardcode these values
-->
<button id="theme-switcher" type="button" class="ml-0 origin-(right_center)">
  <div id="icon-theme-auto">
    <Icon name="tabler:sun-moon" class="h-8 text-lg" />
    <span class="sr-only">Use dark theme</span>
  </div>
  <div id="icon-theme-dark" class="hidden">
    <Icon name="tabler:moon" class="h-8 text-lg" />
    <span class="sr-only">Use auto theme</span>
  </div>
  <div id="icon-theme-light" class="hidden">
    <Icon name="tabler:sun" class="h-8 text-lg" />
    <span class="sr-only">Use dark theme</span>
  </div>
</button>

<script>
  import invariant from "tiny-invariant";

  const themes = ["auto", "dark", "light"];
  const button = document.querySelector("#theme-switcher");
  invariant(button, "button should not be null");

  const getThemeNext = () => {
    const themeCurrent = document.documentElement.dataset.raw_theme;
    invariant(themeCurrent, "themeCurrent should not be undefined");
    const indexThemeCurrent = themes.indexOf(themeCurrent);
    return themes[(indexThemeCurrent + 1) % themes.length];
  };

  const updateTheme = () => {
    const theme = document.documentElement.dataset.raw_theme;
    document.documentElement.dataset.theme =
      theme === "auto"
        ? window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "light"
        : theme;
  };

  const updateAssets = () => {
    updateTheme();
    const themeCurrent = document.documentElement.dataset.theme;
    const themeCurrentRaw = document.documentElement.dataset.raw_theme;
    for (const theme of themes) {
      document
        .querySelector(`#overview-image-${theme}`)
        ?.classList[themeCurrent == theme ? "remove" : "add"]("hidden");
      document
        .querySelector(`#icon-theme-${theme}`)
        ?.classList[themeCurrentRaw == theme ? "remove" : "add"]("hidden");
    }
  };

  button.addEventListener("click", () => {
    const themeNext = getThemeNext();
    document.documentElement.dataset.raw_theme = themeNext;
    localStorage.setItem("raw_theme", themeNext);
    updateAssets();
  });

  window
    .matchMedia("(prefers-color-scheme: dark)")
    .addEventListener("change", () => {
      document.documentElement.dataset.raw_theme === "auto" && updateAssets();
    });

  updateAssets();
</script>
